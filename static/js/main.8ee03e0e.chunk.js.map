{"version":3,"sources":["components/src/buttons/styled.ts","components/src/icon/icon-type.ts","components/src/buttons/buttons.ts","components/src/modal-window/null-component.tsx","components/src/icon/svg/modal-window-cross.svg","components/src/icon/styled.ts","components/src/icon/icon.tsx","components/src/modal-window/styled.ts","components/src/modal-window/component.tsx","components/src/components.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["IconType","Buttons","Primary","styled","button","Null","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","id","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","Styled","Icon","icons","ModalWindowCross","Empty","IconByType","type","modalWindowOpen","keyframes","modalWindowClose","Container","div","isOpen","Header","header","IconStyled","Body","main","Footer","footer","ModalWindow","onClick","handleCancelClick","Components","React","useState","undefined","isModalWindowOpen","setIsModalWindowOpen","handleCollapseClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8ee03e0e.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Primary = styled.button`\r\n\theight: 32px;\r\n\tmin-width: 80px;\r\n\tbackground: #74ba3c;\r\n\tcolor: white;\r\n\tpadding: 0px 14px;\r\n\tborder-radius: 2px;\r\n\toutline: none;\r\n\tborder-width: 0px;\r\n\t:hover {\r\n\t\tbackground: #65ad2b;\r\n\t}\r\n\t:focus {\r\n\t\toutline: 5px auto;\r\n\t\toutline-color: #69d413;\r\n\t}\r\n`;\r\n\r\nexport const Styled = {\r\n\tButtons: {\r\n\t\tPrimary,\r\n\t},\r\n};\r\n","export enum IconType {\r\n\tModalWindowCross = 'modal-window-cross',\r\n\tEmpty = 'empty',\r\n}\r\n","import { Styled } from './styled';\r\n\r\nconst Buttons = Styled.Buttons;\r\n\r\nexport { Buttons };\r\n","export const Null: React.SFC = () => {\r\n\treturn null;\r\n};\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M14.348,14.849c-0.469,0.469-1.229,0.469-1.697,0L10,11.819l-2.651,3.029c-0.469,0.469-1.229,0.469-1.697,0 c-0.469-0.469-0.469-1.229,0-1.697l2.758-3.15L5.651,6.849c-0.469-0.469-0.469-1.228,0-1.697s1.228-0.469,1.697,0L10,8.183 l2.651-3.031c0.469-0.469,1.228-0.469,1.697,0s0.469,1.229,0,1.697l-2.758,3.152l2.758,3.15 C14.817,13.62,14.817,14.38,14.348,14.849z\"\n});\n\nvar SvgModalWindowCross = function SvgModalWindowCross(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Cross\",\n    viewBox: \"5 5 10 10\",\n    enableBackground: \"new 0 0 20 20\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgModalWindowCross, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/modal-window-cross.acdffed4.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\n\r\nconst Icon = styled.i`\r\n\tdisplay: inline-block;\r\n\tfont-style: normal;\r\n\tline-height: 0;\r\n\theight: 20px;\r\n\twidth: 20px;\r\n\ttext-align: center;\r\n\tposition: relative;\r\n\tsvg {\r\n\t\tmax-width: 100%;\r\n\t\tdisplay: inline-block;\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nexport const Styled = {\r\n\tIcon,\r\n};\r\n","import React, { HTMLProps } from 'react';\r\n\r\nimport { Null } from '../modal-window/null-component';\r\nimport { IconType } from './icon-type';\r\nimport { ReactComponent as ModalWindowCross } from './svg/modal-window-cross.svg';\r\n\r\nimport { Styled } from './styled';\r\n\r\nexport interface IconProps extends HTMLProps<{}> {\r\n\ttype: IconType;\r\n}\r\n\r\nconst icons = {\r\n\t[IconType.ModalWindowCross]: () => (\r\n\t\t<Styled.Icon>\r\n\t\t\t<ModalWindowCross />\r\n\t\t</Styled.Icon>\r\n\t),\r\n\t[IconType.Empty]: () => <Null />,\r\n};\r\n\r\nconst Icon = (props: IconProps) => {\r\n\tconst IconByType = icons[props.type];\r\n\treturn <IconByType />;\r\n};\r\n\r\nexport { Icon };\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { IconStyled } from '../icon';\r\n\r\nconst HEIGHT_HEADER = 50;\r\nconst HEIGHT_FOOTER = 72;\r\nconst MODAL_WINDOW_WIDTH = 500;\r\n\r\nconst modalWindowOpen = keyframes`\r\n  from {\r\n\tright: -${MODAL_WINDOW_WIDTH}px;\r\n\topacity: 0;\r\n  }\r\n\r\n  to {\r\n\topacity: 1;\r\n\tright: 0px\r\n  }\r\n`;\r\n\r\nconst modalWindowClose = keyframes`\r\n  from {\r\n\tright: 0;\r\n\topacity: 1;\r\n  }\r\n\r\n  to {\r\n\topacity: 0;\r\n\tright: -${MODAL_WINDOW_WIDTH}px\r\n  }\r\n`;\r\n\r\nconst Container = styled.div<{ isOpen: boolean }>`\r\n\tanimation: ${props => (props.isOpen ? modalWindowOpen : modalWindowClose)}\r\n\t\t0.4s linear;\r\n\ttop: 0;\r\n\tright: ${props => (props.isOpen ? 0 : -MODAL_WINDOW_WIDTH)}px;\r\n\tposition: fixed;\r\n\twidth: ${MODAL_WINDOW_WIDTH}px;\r\n\tmin-height: 100%;\r\n\toverflow: hidden;\r\n\tborder-left: 1px solid;\r\n`;\r\n\r\nconst Header = styled.header`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tcolor: white;\r\n\tfont-weight: 700;\r\n\tpadding: 15px 25px;\r\n\theight: ${HEIGHT_HEADER}px;\r\n\tbackground: #8ac858;\r\n\t${IconStyled.Icon} {\r\n\t\tcursor: pointer;\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t}\r\n`;\r\n\r\nconst Body = styled.main`\r\n\twidth: ${MODAL_WINDOW_WIDTH}px;\r\n\tposition: fixed;\r\n\toverflow-y: auto;\r\n\ttop: ${HEIGHT_HEADER}px;\r\n\tbottom: ${HEIGHT_FOOTER}px;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n\theight: ${HEIGHT_FOOTER};\r\n\tpadding: 20px 25px;\r\n\tbackground: white;\r\n\tposition: fixed;\r\n\twidth: 100%;\r\n\tbottom: 0px;\r\n\tborder-top: 1px solid black;\r\n`;\r\n\r\nexport const Styled = {\r\n\tContainer,\r\n\tHeader,\r\n\tBody,\r\n\tFooter,\r\n};\r\n","import React from 'react';\r\n\r\nimport { Buttons } from '../buttons';\r\nimport { Icon } from '../icon';\r\nimport { IconType } from '../icon/icon-type';\r\n\r\nimport { Styled } from './styled';\r\n\r\ninterface ModalWindowProps {\r\n\tisOpen: boolean;\r\n\thandleCancelClick: () => void;\r\n}\r\n\r\nexport const ModalWindow = (props: ModalWindowProps) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Styled.Container isOpen={props.isOpen}>\r\n\t\t\t\t<Styled.Header>\r\n\t\t\t\t\tModal Window\r\n\t\t\t\t\t<div onClick={props.handleCancelClick}>\r\n\t\t\t\t\t\t<Icon type={IconType.ModalWindowCross} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Styled.Header>\r\n\t\t\t\t<Styled.Body>\r\n\t\t\t\t\tLorem, ipsum dolor sit amet consectetur adipisicing elit. Id\r\n\t\t\t\t\ttemporibus natus tempora laudantium culpa delectus molestias suscipit\r\n\t\t\t\t\tpossimus aliquam magnam eveniet quis sit earum assumenda quo odio\r\n\t\t\t\t\tvoluptatibus, pariatur qui. Lorem, ipsum dolor sit amet consectetur\r\n\t\t\t\t\tadipisicing elit. Id temporibus natus tempora laudantium culpa\r\n\t\t\t\t\tdelectus molestias suscipit possimus aliquam magnam eveniet quis sit\r\n\t\t\t\t\tearum assumenda quo odio voluptatibus, pariatur qui. Lorem, ipsum\r\n\t\t\t\t\tdolor sit amet consectetur adipisicing elit. Id temporibus natus\r\n\t\t\t\t\ttempora laudantium culpa delectus molestias suscipit possimus aliquam\r\n\t\t\t\t\tmagnam eveniet quis sit earum assumenda quo odio voluptatibus,\r\n\t\t\t\t\tpariatur qui. Lorem, ipsum dolor sit amet consectetur adipisicing\r\n\t\t\t\t\telit. Id temporibus natus tempora laudantium culpa delectus molestias\r\n\t\t\t\t\tsuscipit possimus aliquam magnam eveniet quis sit earum assumenda quo\r\n\t\t\t\t\todio voluptatibus, pariatur qui. Lorem, ipsum dolor sit amet\r\n\t\t\t\t\tconsectetur adipisicing elit. Id temporibus natus tempora laudantium\r\n\t\t\t\t\tculpa delectus molestias suscipit possimus aliquam magnam eveniet quis\r\n\t\t\t\t\tsit earum assumenda quo odio voluptatibus, pariatur qui. Lorem, ipsum\r\n\t\t\t\t\tdolor sit amet consectetur adipisicing elit. Id temporibus natus\r\n\t\t\t\t\ttempora laudantium culpa delectus molestias suscipit possimus aliquam\r\n\t\t\t\t\tmagnam eveniet quis sit earum assumenda quo odio Lorem, ipsum dolor\r\n\t\t\t\t\tsit amet consectetur adipisicing elit. Id temporibus natus tempora\r\n\t\t\t\t\tlaudantium culpa delectus molestias suscipit possimus aliquam magnam\r\n\t\t\t\t\teveniet quis sit earum assumenda quo odio voluptatibus, pariatur qui.\r\n\t\t\t\t\tLorem, ipsum dolor sit amet consectetur adipisicing elit. Id\r\n\t\t\t\t\ttemporibus natus tempora laudantium culpa delectus molestias suscipit\r\n\t\t\t\t\tpossimus aliquam magnam eveniet quis sit earum assumenda quo odio\r\n\t\t\t\t\tvoluptatibus, pariatur qui. Lorem, ipsum dolor sit amet consectetur\r\n\t\t\t\t\tadipisicing elit. Id temporibus natus tempora laudantium culpa\r\n\t\t\t\t\tdelectus molestias suscipit possimus aliquam magnam eveniet quis sit\r\n\t\t\t\t\tearum assumenda quo odio voluptatibus, pariatur qui. Lorem, ipsum\r\n\t\t\t\t\tdolor sit amet consectetur adipisicing elit. Id temporibus natus\r\n\t\t\t\t\ttempora laudantium culpa delectus molestias suscipit possimus aliquam\r\n\t\t\t\t\tmagnam eveniet quis sit earum assumenda quo odio voluptatibus,\r\n\t\t\t\t\tpariatur qui. Lorem, ipsum dolor sit amet consectetur adipisicing\r\n\t\t\t\t\telit. Id temporibus natus tempora laudantium culpa delectus molestias\r\n\t\t\t\t\tsuscipit possimus aliquam magnam eveniet quis sit earum assumenda quo\r\n\t\t\t\t\todio voluptatibus, pariatur qui. Lorem, ipsum dolor sit amet\r\n\t\t\t\t\tconsectetur adipisicing elit. Id temporibus natus tempora laudantium\r\n\t\t\t\t\tculpa delectus molestias suscipit voluptatibus, pariatur qui. Lorem,\r\n\t\t\t\t\tipsum dolor sit amet consectetur adipisicing elit. Id temporibus natus\r\n\t\t\t\t\ttempora laudantium culpa delectus molestias suscipit possimus aliquam\r\n\t\t\t\t\tmagnam eveniet quis sit earum assumenda quo odio voluptatibus,\r\n\t\t\t\t\tpariatur qui. Lorem, ipsum dolor sit\r\n\t\t\t\t</Styled.Body>\r\n\t\t\t\t<Styled.Footer>\r\n\t\t\t\t\t<Buttons.Primary onClick={props.handleCancelClick}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Buttons.Primary>\r\n\t\t\t\t</Styled.Footer>\r\n\t\t\t</Styled.Container>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport { Buttons } from './buttons/buttons';\r\nimport { ModalWindow } from './modal-window';\r\n\r\nexport const Components = () => {\r\n\tconst [isModalWindowOpen, setIsModalWindowOpen] = React.useState<\r\n\t\tboolean | undefined\r\n\t>(undefined);\r\n\r\n\tconst handleCollapseClick = () => {\r\n\t\tsetIsModalWindowOpen(!isModalWindowOpen);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Buttons.Primary onClick={handleCollapseClick}>Collapse</Buttons.Primary>\r\n\t\t\t{typeof isModalWindowOpen === 'boolean' && (\r\n\t\t\t\t<ModalWindow\r\n\t\t\t\t\thandleCancelClick={handleCollapseClick}\r\n\t\t\t\t\tisOpen={isModalWindowOpen}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\n\r\nimport { Components } from './components';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const App = () => {\r\n\treturn <Components />;\r\n};\r\n"],"sourceRoot":""}