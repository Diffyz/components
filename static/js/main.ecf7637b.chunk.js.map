{"version":3,"sources":["packages/components/src/buttons/styled.ts","packages/components/src/icon/icon-type.ts","packages/components/src/buttons/buttons.ts","packages/components/src/null-component.tsx","packages/components/src/icon/svg/modal-window-cross.svg","packages/components/src/icon/styled.ts","packages/components/src/icon/icon.tsx","packages/components/src/modal-window/styled.ts","packages/components/src/modal-window/component.tsx","packages/announcement/announcement.tsx","packages/announcement/store/announcement-store.ts","store/app-store.ts","store/use-store.tsx","packages/components/src/components.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["IconType","Buttons","Primary","styled","button","Null","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","id","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","Styled","Icon","icons","ModalWindowCross","Empty","IconByType","type","modalWindowOpen","keyframes","modalWindowClose","Container","div","isOpen","Header","header","IconStyled","Body","main","Footer","footer","ModalWindow","onClick","close","children","Announcement","observer","store","isOpened","toggleAnnouncement","AnnouncementStore","types","model","maybeNull","boolean","actions","self","AppStore","isModalWindowOpen","announcement","optional","setIsModalWindowOpen","storeContext","React","createContext","createStore","create","makeInspectable","StoreProvider","useLocalStore","Provider","value","Components","useContext","Error","useStore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ecf7637b.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Primary = styled.button`\r\n\theight: 32px;\r\n\tmin-width: 80px;\r\n\tbackground: #74ba3c;\r\n\tcolor: white;\r\n\tpadding: 0px 14px;\r\n\tborder-radius: 2px;\r\n\toutline: none;\r\n\tborder-width: 0px;\r\n\t:hover {\r\n\t\tbackground: #65ad2b;\r\n\t}\r\n\t:focus {\r\n\t\toutline: 5px auto;\r\n\t\toutline-color: #69d413;\r\n\t}\r\n`;\r\n\r\nexport const Styled = {\r\n\tButtons: {\r\n\t\tPrimary,\r\n\t},\r\n};\r\n","export enum IconType {\r\n\tModalWindowCross = 'modal-window-cross',\r\n\tEmpty = 'empty',\r\n}\r\n","import { Styled } from './styled';\r\n\r\nconst Buttons = Styled.Buttons;\r\n\r\nexport { Buttons };\r\n","export const Null: React.SFC = () => {\r\n\treturn null;\r\n};\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M14.348,14.849c-0.469,0.469-1.229,0.469-1.697,0L10,11.819l-2.651,3.029c-0.469,0.469-1.229,0.469-1.697,0 c-0.469-0.469-0.469-1.229,0-1.697l2.758-3.15L5.651,6.849c-0.469-0.469-0.469-1.228,0-1.697s1.228-0.469,1.697,0L10,8.183 l2.651-3.031c0.469-0.469,1.228-0.469,1.697,0s0.469,1.229,0,1.697l-2.758,3.152l2.758,3.15 C14.817,13.62,14.817,14.38,14.348,14.849z\"\n});\n\nvar SvgModalWindowCross = function SvgModalWindowCross(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Cross\",\n    viewBox: \"5 5 10 10\",\n    enableBackground: \"new 0 0 20 20\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgModalWindowCross, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/modal-window-cross.acdffed4.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\n\r\nconst Icon = styled.i`\r\n\tdisplay: inline-block;\r\n\tfont-style: normal;\r\n\tline-height: 0;\r\n\theight: 20px;\r\n\twidth: 20px;\r\n\ttext-align: center;\r\n\tposition: relative;\r\n\tsvg {\r\n\t\tmax-width: 100%;\r\n\t\tdisplay: inline-block;\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nexport const Styled = {\r\n\tIcon,\r\n};\r\n","import React, { HTMLProps } from 'react';\r\n\r\nimport { Null } from '../null-component';\r\nimport { IconType } from './icon-type';\r\nimport { ReactComponent as ModalWindowCross } from './svg/modal-window-cross.svg';\r\n\r\nimport { Styled } from './styled';\r\n\r\nexport interface IconProps extends HTMLProps<{}> {\r\n\ttype: IconType;\r\n}\r\n\r\nconst icons = {\r\n\t[IconType.ModalWindowCross]: () => (\r\n\t\t<Styled.Icon>\r\n\t\t\t<ModalWindowCross />\r\n\t\t</Styled.Icon>\r\n\t),\r\n\t[IconType.Empty]: () => <Null />,\r\n};\r\n\r\nconst Icon = (props: IconProps) => {\r\n\tconst IconByType = icons[props.type];\r\n\treturn <IconByType />;\r\n};\r\n\r\nexport { Icon };\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { IconStyled } from '../icon';\r\n\r\nconst HEIGHT_HEADER = 50;\r\nconst HEIGHT_FOOTER = 72;\r\nconst MODAL_WINDOW_WIDTH = 500;\r\n\r\nconst modalWindowOpen = keyframes`\r\n  from {\r\n\tright: -${MODAL_WINDOW_WIDTH}px;\r\n\topacity: 0;\r\n  }\r\n\r\n  to {\r\n\topacity: 1;\r\n\tright: 0px\r\n  }\r\n`;\r\n\r\nconst modalWindowClose = keyframes`\r\n  from {\r\n\tright: 0;\r\n\topacity: 1;\r\n  }\r\n\r\n  to {\r\n\topacity: 0;\r\n\tright: -${MODAL_WINDOW_WIDTH}px\r\n  }\r\n`;\r\n\r\nconst Container = styled.div<{ isOpen: boolean }>`\r\n\tanimation: ${props => (props.isOpen ? modalWindowOpen : modalWindowClose)}\r\n\t\t0.4s linear;\r\n\ttop: 0;\r\n\tright: ${props => (props.isOpen ? 0 : -MODAL_WINDOW_WIDTH)}px;\r\n\tposition: fixed;\r\n\twidth: ${MODAL_WINDOW_WIDTH}px;\r\n\tmin-height: 100%;\r\n\toverflow: hidden;\r\n\tborder-left: 1px solid;\r\n`;\r\n\r\nconst Header = styled.header`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tcolor: white;\r\n\tfont-weight: 700;\r\n\tpadding: 15px 25px;\r\n\theight: ${HEIGHT_HEADER}px;\r\n\tbackground: #8ac858;\r\n\t${IconStyled.Icon} {\r\n\t\tcursor: pointer;\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t}\r\n`;\r\n\r\nconst Body = styled.main`\r\n\twidth: ${MODAL_WINDOW_WIDTH}px;\r\n\tposition: fixed;\r\n\toverflow-y: auto;\r\n\ttop: ${HEIGHT_HEADER}px;\r\n\tbottom: ${HEIGHT_FOOTER}px;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n\theight: ${HEIGHT_FOOTER};\r\n\tpadding: 20px 25px;\r\n\tbackground: white;\r\n\tposition: fixed;\r\n\twidth: 100%;\r\n\tbottom: 0px;\r\n\tborder-top: 1px solid black;\r\n`;\r\n\r\nexport const Styled = {\r\n\tContainer,\r\n\tHeader,\r\n\tBody,\r\n\tFooter,\r\n};\r\n","import React, { PropsWithChildren } from 'react';\r\n\r\nimport { Buttons } from '../buttons';\r\nimport { Icon, IconType } from '../icon';\r\n\r\nimport { Styled } from './styled';\r\n\r\ninterface ModalWindowProps {\r\n\ttitle: string;\r\n\tisOpen: boolean;\r\n\tclose: () => void;\r\n}\r\n\r\nexport const ModalWindow = (props: PropsWithChildren<ModalWindowProps>) => {\r\n\treturn (\r\n\t\t<Styled.Container isOpen={props.isOpen}>\r\n\t\t\t<Styled.Header>\r\n\t\t\t\t{props.title}\r\n\t\t\t\t<div onClick={props.close}>\r\n\t\t\t\t\t<Icon type={IconType.ModalWindowCross} />\r\n\t\t\t\t</div>\r\n\t\t\t</Styled.Header>\r\n\t\t\t<Styled.Body>{props.children}</Styled.Body>\r\n\t\t\t<Styled.Footer>\r\n\t\t\t\t<Buttons.Primary onClick={props.close}>Cancel</Buttons.Primary>\r\n\t\t\t</Styled.Footer>\r\n\t\t</Styled.Container>\r\n\t);\r\n};\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { ModalWindow } from '../components/src/modal-window';\r\n\r\nimport { AnnouncementStoreInstance } from './store/announcement-store';\r\nimport { Null } from '../components';\r\n\r\ninterface AnnouncementProps {\r\n\tstore: AnnouncementStoreInstance;\r\n}\r\n\r\nexport const Announcement = observer((props: AnnouncementProps) => {\r\n\tconst handleClose = () => props.store.toggleAnnouncement();\r\n\treturn props.store.isOpened !== null ? (\r\n\t\t<ModalWindow\r\n\t\t\ttitle={'Announcements'}\r\n\t\t\tisOpen={props.store.isOpened}\r\n\t\t\tclose={handleClose}\r\n\t\t>\r\n\t\t\t<Null />\r\n\t\t</ModalWindow>\r\n\t) : (\r\n\t\t<Null />\r\n\t);\r\n});\r\n","import { Instance, types } from 'mobx-state-tree';\r\n\r\nexport const AnnouncementStore = types\r\n\t.model('AnnouncementStore', {\r\n\t\tisOpened: types.maybeNull(types.boolean),\r\n\t})\r\n\t.actions(self => ({\r\n\t\ttoggleAnnouncement: () => (self.isOpened = !self.isOpened),\r\n\t}));\r\n\r\nexport interface AnnouncementStoreInstance\r\n\textends Instance<typeof AnnouncementStore> {}\r\n","import { Instance, SnapshotIn, types } from 'mobx-state-tree';\r\nimport { AnnouncementStore } from '../packages/announcement';\r\n\r\nexport const AppStore = types\r\n\t.model('AppStore', {\r\n\t\tisModalWindowOpen: types.maybeNull(types.boolean),\r\n\t\tannouncement: types.optional(AnnouncementStore, {\r\n\t\t\tisOpened: null,\r\n\t\t}),\r\n\t})\r\n\t.actions(self => ({\r\n\t\tsetIsModalWindowOpen: (isModalWindowOpen: boolean) => {\r\n\t\t\tself.isModalWindowOpen = isModalWindowOpen;\r\n\t\t},\r\n\t}));\r\n\r\nexport interface AppStoreInstance extends Instance<typeof AppStore> {}\r\nexport interface AppStoreSnapshot extends SnapshotIn<typeof AppStore> {}\r\n","import React from 'react';\r\nimport makeInspectable from 'mobx-devtools-mst';\r\nimport { useLocalStore } from 'mobx-react';\r\n\r\nimport { AppStore, AppStoreInstance } from './app-store';\r\n\r\nconst storeContext = React.createContext<AppStoreInstance | null>(null);\r\n\r\ninterface StoreProviderProps {\r\n\tchildren: JSX.Element;\r\n}\r\n\r\nfunction createStore() {\r\n\tconst store = AppStore.create();\r\n\tmakeInspectable(store);\r\n\treturn store;\r\n}\r\n\r\nexport const StoreProvider = ({ children }: StoreProviderProps) => {\r\n\tconst store = useLocalStore(createStore);\r\n\treturn (\r\n\t\t<storeContext.Provider value={store}>{children}</storeContext.Provider>\r\n\t);\r\n};\r\n\r\nexport const useStore = () => {\r\n\tconst store = React.useContext(storeContext);\r\n\tif (!store) {\r\n\t\t// This is especially useful in TypeScript so you don't need to be checking for null all the time\r\n\t\tthrow new Error('You have forgot to use StoreProvider, shame on you.');\r\n\t}\r\n\treturn store;\r\n};\r\n","import React from 'react';\r\n\r\nimport { Buttons } from './buttons/buttons';\r\nimport { useStore } from '../../../store/use-store';\r\nimport { Announcement } from './../../announcement';\r\n\r\nexport const Components = () => {\r\n\tconst store = useStore();\r\n\r\n\tconst handleCollapseClick = () => {\r\n\t\tstore.announcement.toggleAnnouncement();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Buttons.Primary onClick={handleCollapseClick}>Collapse</Buttons.Primary>\r\n\t\t\t<Announcement store={store.announcement} />\r\n\t\t</>\r\n\t);\r\n};\r\n","/* eslint-disable  */\r\n// This optional code is used to register a service worker.\r\n// Register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// It offline capabilities. However, it also means that developers (and users)\r\n// Will only see deployed updates on subsequent visits to a page, after all the\r\n// Existing tabs open on the page have been closed, since previously cached\r\n// Resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// Opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n\t\t),\r\n);\r\n\r\ninterface Config {\r\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n}\r\n\r\nexport function register(config?: Config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(\r\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n\t\t\twindow.location.href,\r\n\t\t);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// From what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// Serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// Service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// But the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// Content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.',\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// Unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\n\r\nimport { Components } from './packages/components';\r\nimport { StoreProvider } from './store/use-store';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const App = () => {\r\n\treturn (\r\n\t\t<StoreProvider>\r\n\t\t\t<Components />\r\n\t\t</StoreProvider>\r\n\t);\r\n};\r\n"],"sourceRoot":""}